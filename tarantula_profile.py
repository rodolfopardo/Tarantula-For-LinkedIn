import requests, html, jsonheaders = {    'authority': 'www.linkedin.com',    'cache-control': 'max-age=0',    'sec-ch-ua': '"Google Chrome";v="95", "Chromium";v="95", ";Not A Brand";v="99"',    'sec-ch-ua-mobile': '?0',    'sec-ch-ua-platform': '"macOS"',    'upgrade-insecure-requests': '1',    'origin': 'https://www.linkedin.com',    'content-type': 'application/x-www-form-urlencoded',    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36',    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',    'sec-fetch-site': 'same-origin',    'sec-fetch-mode': 'navigate',    'sec-fetch-user': '?1',    'sec-fetch-dest': 'document',    'referer': 'https://www.linkedin.com/',    'accept-language': 'en-GB,en;q=0.9',    'cookie': 'JSESSIONID=ajax:2815718941394657455; lang=v=2&lang=en-us; bcookie="v=2&0c81df03-0f9f-4c64-8766-fce32eba1aad"; bscookie="v=1&202110301249392d702694-4913-418c-8613-c0b647823dfeAQGt0oUVaep0zyJz3wjleFV5keTj-feI"; lidc="b=TGST00:s=T:r=T:a=T:p=T:g=2722:u=1:x=1:i=1635598179:t=1635684579:v=2:sig=AQE9vi6H5gmrE9zEpcLBASqDEvUtrUXE"; G_ENABLED_IDPS=google; AMCVS_14215E3D5995C57C0A495C55%40AdobeOrg=1; AMCV_14215E3D5995C57C0A495C55%40AdobeOrg=-637568504%7CMCIDTS%7C18931%7CMCMID%7C08027826045016946680556635547870123997%7CMCAAMLH-1636202982%7C12%7CMCAAMB-1636202982%7C6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y%7CMCOPTOUT-1635605382s%7CNONE%7CvVersion%7C5.1.1; aam_uuid=08588172376626490950537826286015718422',}data = {  'loginCsrfParam': '0c81df03-0f9f-4c64-8766-fce32eba1aad',  'session_key': 'tarantula.1110101@protonmail.com',        # You may change it  'session_password': 'T4ran7ula',                          # You may change it  'trk': 'homepage-basic_signin-form_submit',  'controlId': 'd_homepage-guest-home-homepage-basic_signin-form_submit-button',  'pageInstance': 'urn:li:page:d_homepage-guest-home_jsbeacon;1qFPI6fTRmmEM+eKMl4oIw=='}aboutInfo = {}contactInfo = {}links = []def collectInfo(profile):    global contactInfo    with requests.Session() as s:        response = s.post('https://www.linkedin.com/uas/login-submit', headers=headers, data=data)        response = s.get('https://www.linkedin.com/in/{}/detail/contact-info/'.format(profile))        content = html.unescape(response.text).encode('ascii', 'ignore').decode().split('\n') # response.text.replace('&quot;', '"').split('\n')        about = {}        for i in content:            if '{"data":{"birthDateOn":' in i:                contactInfo = json.loads(i)            if 'com.linkedin.voyager.dash.common.Geo' in i:                about = json.loads(i)                                # ABOUT        for i in about["included"]:            if i["$type"] == "com.linkedin.restli.common.CollectionResponse":                continue            if i["$type"] == "com.linkedin.voyager.dash.common.Geo":                try:                    if "Location" in aboutInfo:                        aboutInfo["Location"] += ', ' + i["defaultLocalizedName"]                    else:                        aboutInfo["Location"] = i["defaultLocalizedName"]                except:                    pass            if i["$type"] == "com.linkedin.voyager.dash.common.Industry":                if "Industry" in aboutInfo:                    aboutInfo["Industry"].append(i["name"])                else:                    aboutInfo["Industry"] = [i["name"]]            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Certification":                if "Certificates" in aboutInfo:                    aboutInfo["Certificates"].append("{0} by {1}".format(i["name"], i["authority"]))                else:                    aboutInfo["Certificates"] = ["{0} by {1} ({2}/{3})".format(i["name"], i["authority"], i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"])]                if i["url"] != None:                    aboutInfo["Certificates"][-1] += "({})".format(i["url"])                    links.append([i["name"], i["url"]])            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Education":                if "Education" in aboutInfo:                    aboutInfo["Education"].append([])                    aboutInfo["Education"][-1].append("{0} - {1}".format(i["dateRange"]["start"]["year"], i["dateRange"]["end"]["year"]))                    aboutInfo["Education"][-1].append(i["schoolName"])                    aboutInfo["Education"][-1].append(i["fieldOfStudy"])                    aboutInfo["Education"][-1].append(i["degreeName"])                    aboutInfo["Education"][-1].append(i["grade"])                else:                    aboutInfo["Education"] = [[]]                    aboutInfo["Education"][-1].append("{0} - {1}".format(i["dateRange"]["start"]["year"], i["dateRange"]["end"]["year"]))                    aboutInfo["Education"][-1].append(i["schoolName"])                    aboutInfo["Education"][-1].append(i["fieldOfStudy"])                    aboutInfo["Education"][-1].append(i["degreeName"])                    aboutInfo["Education"][-1].append(i["grade"])            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Language":                if "Language" in aboutInfo:                    aboutInfo["Language"].append("{} : {}".format(i["name"], i["proficiency"]))                else:                    aboutInfo["Language"] = ["{} : {}".format(i["name"], i["proficiency"])]            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Profile" and len(i) == 69:                try:                    aboutInfo["Name"] = i["firstName"] + ' ' + i["lastName"]                except:                    aboutInfo["Name"] = None                try:                    aboutInfo["Date of Birth"] = '{0}/{1}'.format(i["birthDateOn"]["day"], i["birthDateOn"]["month"])                except:                    aboutInfo["Date of Birth"] = None                aboutInfo["Headline"] = i["headline"]                aboutInfo["Summary"] = i["summary"]                aboutInfo["address"] = i["address"]                aboutInfo["state"] = i["state"]                aboutInfo["linkedIn"] = i["publicIdentifier"]                links.append(['LinkedIn', 'https://www.linkedin.com/in/{}'.format(i["publicIdentifier"])])                            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Project":                if i["url"]:                    links.append([i["title"], i["url"]])                if "Projects" in aboutInfo:                    aboutInfo["Projects"].append([])                    try:                        aboutInfo["Projects"][-1].append('{}/{} - {}/{}'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"], i["dateRange"]["end"]["month"], i["dateRange"]["end"]["year"]))                    except:                        try:                            aboutInfo["Projects"][-1].append('{}/{} - Present'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"]))                        except:                            aboutInfo["Projects"][-1].append(None)                    aboutInfo["Projects"][-1].append(i["description"])                    aboutInfo["Projects"][-1].append(i["title"])                    aboutInfo["Projects"][-1].append(i["url"])                else:                    aboutInfo["Projects"] = [[]]                    try:                        aboutInfo["Projects"][-1].append('{}/{} - {}/{}'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"], i["dateRange"]["end"]["month"], i["dateRange"]["end"]["year"]))                    except:                        try:                            aboutInfo["Projects"][-1].append('{}/{} - Present'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"]))                        except:                            aboutInfo["Projects"][-1].append(None)                    aboutInfo["Projects"][-1].append(i["description"])                    aboutInfo["Projects"][-1].append(i["title"])                    aboutInfo["Projects"][-1].append(i["url"])            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Skill":                if "Skills" in aboutInfo:                    aboutInfo["Skills"].append(i["name"])                else:                    aboutInfo["Skills"] = [i["name"]]            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.treasury.TreasuryMedia":                if 'Url' in i['data']:                    if "Links" in aboutInfo:                        aboutInfo["Links"].append([])                        aboutInfo["Links"][-1].append(i["data"]["Url"])                        try:                            aboutInfo["Links"][-1].append(i["description"])                        except:                            aboutInfo["Links"][-1].append(None)                        try:                            aboutInfo["Links"][-1].append(i["title"])                        except:                            aboutInfo["Links"][-1].append(None)                    else:                        aboutInfo["Links"] = [[]]                        aboutInfo["Links"][-1].append(i["data"]["Url"])                        try:                            aboutInfo["Links"][-1].append(i["description"])                        except:                            aboutInfo["Links"][-1].append(None)                        try:                            aboutInfo["Links"][-1].append(i["title"])                        except:                            aboutInfo["Links"][-1].append(None)                    try:                        links.append([i['title'], i['data']['Url']])                    except:                        links.append(['', i['data']['Url']])            if i["$type"] == "com.linkedin.voyager.dash.organization.Company":                links.append([i["name"], i["url"]])            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Position":                if "Work Experience" in aboutInfo:                    aboutInfo["Work Experience"].append([])                    try:                        aboutInfo["Work Experience"][-1].append('{}/{} - {}/{}'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"], i["dateRange"]["end"]["month"], i["dateRange"]["end"]["year"]))                    except:                        try:                            aboutInfo["Work Experience"][-1].append('{}/{} - Present'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"]))                        except:                            aboutInfo["Work Experience"][-1].append(None)                    aboutInfo["Work Experience"][-1].append(i["companyName"])                    aboutInfo["Work Experience"][-1].append(i["title"])                else:                    aboutInfo["Work Experience"] = [[]]                    try:                        aboutInfo["Work Experience"][-1].append('{}/{} - {}/{}'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"], i["dateRange"]["end"]["month"], i["dateRange"]["end"]["year"]))                    except:                        try:                            aboutInfo["Work Experience"][-1].append('{}/{} - Present'.format(i["dateRange"]["start"]["month"], i["dateRange"]["start"]["year"]))                        except:                            aboutInfo["Work Experience"][-1].append(None)                    aboutInfo["Work Experience"][-1].append(i["companyName"])                    aboutInfo["Work Experience"][-1].append(i["title"])                def aboutSearch(profile, keywords):    with requests.Session() as s:        response = s.post('https://www.linkedin.com/uas/login-submit', headers=headers, data=data)        response = s.get('https://www.linkedin.com/in/{}/detail/contact-info/'.format(profile))        content = html.unescape(response.text).encode('ascii', 'ignore').decode().split('\n') # response.text.replace('&quot;', '"').split('\n')        about = {}        for i in content:            if 'com.linkedin.voyager.dash.common.Geo' in i:                about = json.loads(i)        marker = 0        dataChunk = []        for i in about["included"]:            if i["$type"] == "com.linkedin.voyager.dash.identity.profile.Profile" and len(i) == 69:                dataChunk.append(i["headline"])                dataChunk.append(i["summary"])        for i in keywords:            for j in dataChunk:                if j:                    marker += j.lower().count(i.replace('_', ' '))        return marker            def createProfile(profile):    file = open('{}_Info.txt'.format(profile), 'w')    file.write("BASIC INFORMATION" + '_' * 100 + '\n')    file.write('\nName : {}\n'.format(aboutInfo["Name"]))    if aboutInfo["Headline"]:        try:            file.write('\n{}\n'.format(aboutInfo["Headline"]))        except:            file.write('\n')            for i in aboutInfo["Headline"]:                try:                    file.write(i)                except:                    pass            file.write('\n')    if aboutInfo["Summary"]:        try:            file.write('\n{}\n'.format(aboutInfo["Summary"]))        except:            file.write('\n')            for i in aboutInfo["Summary"]:                try:                    file.write(i)                except:                    pass            file.write('\n')    if aboutInfo["Date of Birth"]:        file.write('\nDate of Birth : {}\n'.format(aboutInfo["Date of Birth"]))    if aboutInfo["address"]:        file.write('\nAddress : {}\n'.format(aboutInfo["address"]))    if aboutInfo["Location"]:        file.write('\nLocation : {}\n'.format(aboutInfo["Location"]))    if aboutInfo["state"]:        file.write('\nState : {}\n'.format(aboutInfo["state"]))    if "Education" in aboutInfo:        file.write("\nEducation : \n")        for i in aboutInfo["Education"]:            file.write("\tDuration : {}\n".format(i[0]))            file.write("\tSchool : {}\n".format(i[1]))            if i[2]:                file.write("\tDepartment : {}\n".format(i[2]))            if i[3]:                file.write("\tDegree : {}\n".format(i[3]))            if i[4]:                file.write("\tGrade : {}\n".format(i[4]))            file.write('\n')    if "Work Experience" in aboutInfo:        file.write("\nWork Experience : \n")        for i in aboutInfo["Work Experience"]:            if i[0]:                file.write("\tDuration : {}\n".format(i[0]))            file.write("\tOrganization : {}\n".format(i[1]))            file.write("\tPost : {}\n".format(i[2]))            file.write('\n')    if "Industry" in aboutInfo:        file.write("\nIndustries : ")        file.write(', '.join(aboutInfo["Industry"]) + '\n')    if "Certificates" in aboutInfo:        file.write("\nCertificates : \n")        for i in aboutInfo["Certificates"]:            file.write('\t{}\n'.format(i))    if "Language" in aboutInfo:        file.write("\nLanguages known : \n")        for i in aboutInfo["Language"]:            file.write('\t{}\n'.format(i))    if "Skills" in aboutInfo:        file.write("\nSkills : ")        file.write(', '.join(aboutInfo["Skills"]) + '\n')    if "Projects" in aboutInfo:        file.write("\nProjects : \n")        for i in aboutInfo["Projects"]:            if i[0]:                file.write("\tDuration : {}\n".format(i[0]))            file.write("\tTitle : {}\n".format(i[2]))            if i[1]:                file.write("\t{}\n".format(i[1]))            if i[3]:                file.write("\tLink : {}\n".format(i[3]))            file.write('\n')    if "Links" in aboutInfo:        file.write("\nOther Profiles : \n")        for i in aboutInfo["Links"]:            if i[2]:                file.write('\n\t{}'.format(i[2]))            if i[1]:                file.write('\n\t{}'.format(i[1]))            if i[0]:                file.write('\n\t{}'.format(i[0]))            file.write('\n')    file.write('\n\n\n')            # CONTACTS    file.write("Contact Information" + '_' * 100 + '\n')    for i in contactInfo["data"]:        if type(contactInfo["data"][i]) == str and i != "$type" and i != "entityUrn":            if contactInfo["data"][i] != None:                file.write(i + ' : ' + contactInfo["data"][i] + '\n')    try:        file.write('Date of Birth : {0}/{1}\n'.format(contactInfo["data"]["birthDateOn"]["day"], contactInfo["data"]["birthDateOn"]["month"]))    except:        pass    if contactInfo["data"]["phoneNumbers"] and contactInfo["data"]["phoneNumbers"] != []:        file.write('Phone Numbers : \n')        for i in contactInfo["data"]["phoneNumbers"]:            file.write('\t{0} : {1}\n'.format(i["type"], i["number"]))    if contactInfo["data"]["twitterHandles"] != []:        file.write('Twitter Handles : \n')        for i in contactInfo["data"]["twitterHandles"]:            file.write('\t' + i + '\n')    file.write('\n\n\n')            # LINKS    if links != []:        file.write("IMPORTANT LINKS" + '_' * 100 + '\n')        for i in links:            try:                file.write('{0} : {1}\n'.format(i[0], i[1]))            except:                pass                    file.close()def totalSearch(profile, keywords, keepFiles):    collectInfo(profile)    if keepFiles:        createProfile(profile)    dataChunk = ''    for i in aboutInfo:        dataChunk += str(aboutInfo[i]).lower() + ' '    for i in contactInfo:        dataChunk += str(contactInfo[i]).lower() + ' '    l1 = list(dataChunk)    i = 0    while i != len(l1):        if l1[i] not in 'qwertyuiopasdfghjklzxcvbnm1234567890 ':            l1.pop(i)        else:            i += 1    dataChunk = ''.join(l1)    marker = 0    for i in keywords:        marker += dataChunk.count(i.replace('_', ' '))    return marker